topic:
  name: users
  partitions-num: 3
  replication-factor: 1
server:
  port: 9080
spring:
  application:
    name: spring-kafka-example-first
  kafka:
    bootstrap-servers: localhost:29092
    properties:
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: group_id_2
      auto-offset-reset: latest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        specific.avro.reader: true
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        acks: 0
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:
  sleuth:
    probability: 1.0
    enabled: true
    traceId128: true
    sampler:
      probability: 1.0
    opentracing:
      enabled: true
  zipkin:
    enabled: true
    storage:
      type: mem
io:
  opentracing:
    brave: brave-opentracing